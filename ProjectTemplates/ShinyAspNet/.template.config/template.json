{
    "$schema": "http://json.schemastore.org/template",
    "author": "Shiny .NET",
    "classifications": [ "Shiny" ],
    "name": "Shiny ASP.NET Application",
    "shortName": "shinyaspnet",
    "description": "A project for creating a .NET MAUI /w Shiny.NET, Prism, & ReactiveUI",
    "identity": "Shiny.Templates.AspNet",
    "sourceName": "ShinyApp",
    "preferNameDirectory": true,    
    "tags": {
        "language": "C#",
        "type": "project"
    },    
    "primaryOutputs": [{
        "condition": "(HostIdentifier != \"dotnetcli\" && HostIdentifier != \"dotnetcli-preview\")",
        "path": "Program.cs"
    }],
    "postActions": [{
        "condition": "(HostIdentifier != \"dotnetcli\" && HostIdentifier != \"dotnetcli-preview\")",
        "description": "Open Program.cs file",
        "manualInstructions": [],
        "actionId": "84C0DA21-51C8-4541-9940-6CA19AF04EE6",
        "args": {
            "files": "0"
        },
        "continueOnError": true
    }],
    "guids": [
        "07CD65EF-6238-4365-AF5D-F6D433967F48",
        "8B51DC95-6D07-4C39-BC6C-3BFE96E8A7EA"
    ],   
    "symbols":{
        "Framework": {
            "type": "parameter",
            "description": "The target framework for the project.",
            "datatype": "choice",
            "choices": [{
                "choice": "net7.0",
                "description": "Target .NET 7.0"
            }],
            "replaces": "{DOTNET_TFM}",
            "defaultValue": "net7.0"
        },
        "push":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "",
            "displayName": "Add Push Notification Management (Shiny.Extensions.Push)"
        }, 
        "email":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "",
            "displayName": "Add Email Templating (Shiny.Extensions.Email)"
        },
        "google":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "",
            "displayName": "Google Authentication"
        },
        "facebook":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "",
            "displayName": "Facebook Authentication"
        },
        "apple":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "",
            "displayName": "Apple Authentication"
        },
        "mobileauth": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "",
            "displayName": "Mobile Sign-In"
        },
        "signalr":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add SignalR",
            "displayName": "Add SignalR"
        },
        "ef": {
            "type": "parameter",
            "datatype": "choice",
            "defaultValue": "None",
            "description": "Add Entity Framework",
            "displayName": "Add Entity Framework",
            "choices": [
                {
                    "choice": "SQL Server",
                    "description": "SQL Server"
                }
            ]
        },
        "connectionstring": {
            "type": "parameter",
            "dataType": "string",
            "description": "Your Database Connection String",
            "defaultValue": "",
            "replaces":"{CONNECTION_STRING}"
        },        
        "efsql":{
            "type": "computed",
            "datatype": "bool",
            "value": "(ef != \"SQL Server\")"
        }
    },
    "sources": [{
        "source": "./",
        "target": "./",
        "copyOnly": [
            "**/*.svg",
            "**/*.ttf",
            "**/*.txt"
        ],
        "modifiers": [
        {
            "condition": "(mobileauth == false)",
            "exclude": "Endpoints/Auth"
        },
        {
            "condition": "(mobileauth == false)",
            "exclude": "Endpoints/Profile"
        },
        {
            "condition": "(signalr == false)",
            "exclude": "Hubs"
        },{
            "condition": "(push == false)",
            "exclude": "Endpoints/Profile/RegisterPushEndpoint.cs"            
        }]
    }]    
}